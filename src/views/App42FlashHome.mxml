<?xml version="1.0" encoding="utf-8"?>

<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="view_creationCompleteHandler(event)" title="sample">
	<fx:Script>
		<![CDATA[
			import com.shephertz.app42.callback.App42FlashCallback;
			import com.shephertz.app42.callback.AppConstants;
			import com.shephertz.app42.paas.sdk.as3.App42API;
			import com.shephertz.app42.paas.sdk.as3.App42Log;
			import com.shephertz.app42.paas.sdk.as3.pushNotification.DeviceType;
			import com.shephertz.app42.push.App42Push;
			import com.shephertz.app42.push.events.App42PushEvent;
			import com.shephertz.app42.push.events.App42RegistrationEvent;
			
			import mx.events.FlexEvent;
			
			import spark.managers.PersistenceManager;
			protected var persistence:PersistenceManager = new PersistenceManager;
			protected var app42Push:App42Push;
			[Bindable]
			protected var registered:Boolean = false;
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				if (App42Push.isSupported)
				{
					app42Push = new App42Push;
					app42Push.addEventListener(App42RegistrationEvent.REGISTER, onRegistered);
					app42Push.addEventListener(App42PushEvent.Message, onMessage);
					intializeApi();
					// Checking if application was already registered in App42 service
					var registrationId:String = persistence.getProperty("registration_id") as String;
					registered = registrationId != null;
					if(registered){
						app42Push.lastMessage();
					}
					else{
						app42Push.register(AppConstants.ProjectNo);
					}
					trace("Current registration id:", registrationId);
					
				}
			}
			private function intializeApi():void
			{
				App42API.initialize(AppConstants.ApiKey,AppConstants.SecretKey);
				App42API.setLoggedInUser(AppConstants.UserId);
				App42Log.setDebug(true);
			}
			
			private function onMessage(event:App42PushEvent):void
			{
				trace("app42 Message:", event.message);
				app42Push.resetCount();
				message.text=event.message as String;
			}
			
			private function onSendPushClick(event:MouseEvent):void
			{
              App42API.buildPushNotificationService().sendPushMessageToUser(userInput.text,messageInput.text,
				  new App42FlashCallback());
			}
		
			private function onRegistered(event:App42RegistrationEvent):void
			{
				trace("Registered with registration id:", event.registrationId);
				// Storing registration id received from C2DM service
				persistence.setProperty("registration_id", event.registrationId);
				App42API.buildPushNotificationService().storeDeviceToken(App42API.getLoggedInUser(),
				event.registrationId,DeviceType.ANDROID,new App42FlashCallback());
				registered = true;
			}
			
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:TextInput id="messageInput" left="20" right="20" top="20"
				 text="Hey I am using App42 Flash Push"/>
	<s:TextInput id="userInput" left="20" right="20" top="60" text="user"/>
		<s:Button id="btnSendPush" top="120" width="150" label="SendPush"
				  click="onSendPushClick(event) " horizontalCenter="0"/>
	<s:Label id="message" fontSize="20" fontWeight="bold" horizontalCenter="0" verticalCenter="0"/>
	
</s:View>
